{"version":3,"sources":["components/feedbackoptions/FeedbackOptions.module.css","components/notification/Notification.module.css","components/statistics/Statistics.module.css","components/section/Section.js","components/feedbackoptions/FeedbackOptions.js","components/notification/Notification.js","components/statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","FeedbackOptions","props","options","map","option","className","s","button","id","type","onClick","e","onLeaveFeedback","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","section","App","useState","setGood","setNeutral","setBad","countTotalFeedback","preventDefault","target","prevGood","prevNeutral","prevBad","console","log","Math","round","ReactDOM","render","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,8B,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,8B,4GCCtBC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,M,gBCFCC,EAAkB,SAAAC,GAAK,OAC3B,mCACGA,EAAMC,QAAQC,KAAI,SAAAC,GAAM,OACvB,wBACEC,UAAWC,IAAEC,OAEbC,GAAIJ,EACJK,KAAK,SACLC,QAAS,SAAAC,GACPV,EAAMW,gBAAgBD,IAN1B,SASGP,GAPIA,S,gBCLPS,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,oBAAIT,UAAWC,IAAER,MAAjB,SAAyBgB,K,gBCAzDC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,sBAAKf,UAAWC,IAAEe,QAAlB,UACE,0CAAaL,KACb,6CAAgBC,KAChB,yCAAYC,KACZ,2CAAcC,KACd,uDAA0BC,EAA1B,WCsDWE,MAzDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOL,EAAP,KAAYQ,EAAZ,KAqBA,SAASC,IACP,OAAOX,EAAOC,EAAUC,EAO1B,OACE,qCACE,cAAC,EAAD,CAASpB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEI,QAAS,CAAC,OAAQ,UAAW,OAC7BU,gBAhCR,SAAyBD,GACvBA,EAAEiB,iBACF,IAAQpB,EAAOG,EAAEkB,OAATrB,GAER,OAAQA,GACN,IAAK,OACHgB,GAAQ,SAAAM,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHL,GAAW,SAAAM,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHL,GAAO,SAAAM,GAAO,OAAIA,EAAU,KAC5B,MACF,QACEC,QAAQC,IAAI1B,SAoBd,cAAC,EAAD,CAASV,MAAM,aAAf,SACG6B,IACC,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOQ,IACPP,mBAlBDe,KAAKC,MAAO,IAAMT,IAAwBX,KAqB3C,cAAC,EAAD,CAAcF,QAAQ,4BCnDhCuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.42a68f6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3oN1K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__1UIWn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Statistics_section__3jbrS\"};","import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport { Section };\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = props => (\n  <>\n    {props.options.map(option => (\n      <button\n        className={s.button}\n        key={option}\n        id={option}\n        type=\"button\"\n        onClick={e => {\n          props.onLeaveFeedback(e);\n        }}\n      >\n        {option}\n      </button>\n    ))}\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n};\n\nexport { FeedbackOptions };\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => <h2 className={s.title}>{message}</h2>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport { Notification };\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className={s.section}>\n    <span>Good: {good}</span>\n    <span>Neutral: {neutral}</span>\n    <span>Bad: {bad}</span>\n    <span>Total: {total}</span>\n    <span>Positive feedback: {positivePercentage}%</span>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport { Statistics };\n","import React, { useState } from 'react';\nimport { Section } from './components/section';\nimport { FeedbackOptions } from './components/feedbackoptions';\nimport { Notification } from './components/notification';\nimport { Statistics } from './components/statistics';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  function onLeaveFeedback(e) {\n    e.preventDefault();\n    const { id } = e.target;\n\n    switch (id) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      default:\n        console.log(id);\n    }\n  }\n\n  function countTotalFeedback() {\n    return good + neutral + bad;\n  }\n\n  function countPositiveFeedbackPercentage() {\n    return Math.round((100 / countTotalFeedback()) * good);\n  }\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}